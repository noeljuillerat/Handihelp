{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\Handihelp\\\\handihelp\\\\src\\\\components\\\\Formulaire.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport emailjs from \"emailjs-com\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactForm = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let nameS = document.getElementById(\"name\");\n    let emailS = document.getElementById(\"email\");\n    let messageS = document.getElementById(\"message\");\n    let phoneS = document.getElementById(\"message\");\n    let companyS = document.getElementById(\"message\");\n    let formMess = document.querySelector(\".formMessage\");\n\n    const isEmail = () => {\n      let isMail = document.getElementById(\"not-mail\");\n      let regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n\n      if (email.match(regex)) {\n        isMail.style.display = \"none\";\n        return true;\n      } else {\n        isMail.style.display = \"block\";\n        isMail.style.animation = \"dongle 1s\";\n        setTimeout(() => {\n          isMail.style.animation = \"none\";\n        }, 1000);\n        return false;\n      }\n    };\n\n    if (name && isEmail() && message) {\n      nameS.classList.remove(\"red\");\n      emailS.classList.remove(\"red\");\n      messageS.classList.remove(\"red\");\n      formMess.innerHTML = \"Message en cours d'envoi...\";\n      formMess.style.background = \"#00c1ec\";\n      formMess.style.opacity = \"1\"; // voir doc : https://www.emailjs.com/docs/examples/reactjs/\n\n      emailjs.send( // your service ID\n      \"service_bdkocoo\", // your template ID\n      \"template_3xer5ky\", {\n        name,\n        email,\n        message,\n        company,\n        phone\n      }, // your user ID (protégé par .env)\n      process.env.REACT_APP_EMAILJS_KEY).then(() => {\n        formMess.innerHTML = \"Message envoyé ! Je vous recontacterai dès que possible.\";\n        document.getElementById(\"name\").classList.remove(\"error\");\n        document.getElementById(\"email\").classList.remove(\"error\");\n        document.getElementById(\"message\").classList.remove(\"error\");\n        document.getElementById(\"company\").classList.remove(\"error\");\n        document.getElementById(\"phone\").classList.remove(\"error\");\n        setName(\"\");\n        setEmail(\"\");\n        setMessage(\"\");\n        setCompany(\"\");\n        setPhone(\"\");\n        setTimeout(() => {\n          formMess.style.opacity = \"0\";\n        }, 5000);\n      }, err => {\n        console.log(err);\n        formMess.style.background = \"rgb(253, 87, 87)\";\n        formMess.innerHTML = \"Une erreur s'est produite, veuillez réessayer.\";\n      });\n    } else {\n      formMess.innerHTML = \"Merci de remplir correctement les champs requis *\";\n      formMess.style.background = \"rgb(253, 87, 87)\";\n      formMess.style.opacity = \"1\";\n\n      if (!name) {\n        nameS.classList.add(\"error\");\n      }\n\n      if (!email) {\n        emailS.classList.add(\"error\");\n      }\n\n      if (!message) {\n        messageS.classList.add(\"error\");\n      }\n\n      if (!company) {\n        companyS.classList.add(\"error\");\n      }\n\n      if (!phone) {\n        phoneS.classList.add(\"error\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"contact-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Contactez-moi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        required: true,\n        onChange: e => setName(e.target.value),\n        placeholder: \"nom *\",\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"company\",\n        name: \"company\",\n        onChange: e => setCompany(e.target.value),\n        placeholder: \"soci\\xE9t\\xE9\",\n        value: company\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"phone\",\n        name: \"phone\",\n        onChange: e => setPhone(e.target.value),\n        placeholder: \"t\\xE9l\\xE9phone\",\n        value: phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"not-mail\",\n          children: \"Email non valide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"mail\",\n          id: \"email\",\n          name: \"email\",\n          required: true,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"email *\",\n          value: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"message\",\n        name: \"message\",\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"message *\",\n        value: message,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"formButton hover button\",\n      type: \"submit\",\n      value: \"Envoyer\",\n      onClick: e => handleSubmit(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formMessage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactForm, \"1pVA72sFZnUE5LEts5t8y9amonU=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["C:/Dev/Handihelp/handihelp/src/components/Formulaire.js"],"names":["React","useState","emailjs","ContactForm","name","setName","company","setCompany","phone","setPhone","email","setEmail","message","setMessage","handleSubmit","e","preventDefault","nameS","document","getElementById","emailS","messageS","phoneS","companyS","formMess","querySelector","isEmail","isMail","regex","match","style","display","animation","setTimeout","classList","remove","innerHTML","background","opacity","send","process","env","REACT_APP_EMAILJS_KEY","then","err","console","log","add","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport emailjs from \"emailjs-com\";\r\n\r\nconst ContactForm = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [company, setCompany] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let nameS = document.getElementById(\"name\");\r\n    let emailS = document.getElementById(\"email\");\r\n    let messageS = document.getElementById(\"message\");\r\n    let phoneS = document.getElementById(\"message\");\r\n    let companyS = document.getElementById(\"message\");\r\n    let formMess = document.querySelector(\".formMessage\");\r\n\r\n    const isEmail = () => {\r\n      let isMail = document.getElementById(\"not-mail\");\r\n      let regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n\r\n      if (email.match(regex)) {\r\n        isMail.style.display = \"none\";\r\n        return true;\r\n      } else {\r\n        isMail.style.display = \"block\";\r\n        isMail.style.animation = \"dongle 1s\";\r\n        setTimeout(() => {\r\n          isMail.style.animation = \"none\";\r\n        }, 1000);\r\n        return false;\r\n      }\r\n    };\r\n\r\n    if (name && isEmail() && message) {\r\n      nameS.classList.remove(\"red\");\r\n      emailS.classList.remove(\"red\");\r\n      messageS.classList.remove(\"red\");\r\n\r\n      formMess.innerHTML = \"Message en cours d'envoi...\";\r\n      formMess.style.background = \"#00c1ec\";\r\n      formMess.style.opacity = \"1\";\r\n\r\n      // voir doc : https://www.emailjs.com/docs/examples/reactjs/\r\n      emailjs\r\n        .send(\r\n          // your service ID\r\n          \"service_bdkocoo\",\r\n          // your template ID\r\n          \"template_3xer5ky\",\r\n\r\n          {\r\n            name,\r\n            email,\r\n            message,\r\n            company,\r\n            phone,\r\n          },\r\n          // your user ID (protégé par .env)\r\n          process.env.REACT_APP_EMAILJS_KEY\r\n        )\r\n        .then(\r\n          () => {\r\n            formMess.innerHTML =\r\n              \"Message envoyé ! Je vous recontacterai dès que possible.\";\r\n\r\n            document.getElementById(\"name\").classList.remove(\"error\");\r\n            document.getElementById(\"email\").classList.remove(\"error\");\r\n            document.getElementById(\"message\").classList.remove(\"error\");\r\n            document.getElementById(\"company\").classList.remove(\"error\");\r\n            document.getElementById(\"phone\").classList.remove(\"error\");\r\n            setName(\"\");\r\n            setEmail(\"\");\r\n            setMessage(\"\");\r\n            setCompany(\"\");\r\n            setPhone(\"\");\r\n\r\n            setTimeout(() => {\r\n              formMess.style.opacity = \"0\";\r\n            }, 5000);\r\n          },\r\n          (err) => {\r\n            console.log(err);\r\n            formMess.style.background = \"rgb(253, 87, 87)\";\r\n            formMess.innerHTML =\r\n              \"Une erreur s'est produite, veuillez réessayer.\";\r\n          }\r\n        );\r\n    } else {\r\n      formMess.innerHTML = \"Merci de remplir correctement les champs requis *\";\r\n      formMess.style.background = \"rgb(253, 87, 87)\";\r\n      formMess.style.opacity = \"1\";\r\n\r\n      if (!name) {\r\n        nameS.classList.add(\"error\");\r\n      }\r\n      if (!email) {\r\n        emailS.classList.add(\"error\");\r\n      }\r\n      if (!message) {\r\n        messageS.classList.add(\"error\");\r\n      }\r\n      if (!company) {\r\n        companyS.classList.add(\"error\");\r\n      }\r\n      if (!phone) {\r\n        phoneS.classList.add(\"error\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"contact-form\">\r\n      <h3>Contactez-moi</h3>\r\n      <div className=\"form-content\">\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          name=\"name\"\r\n          required\r\n          onChange={(e) => setName(e.target.value)}\r\n          placeholder=\"nom *\"\r\n          value={name}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          id=\"company\"\r\n          name=\"company\"\r\n          onChange={(e) => setCompany(e.target.value)}\r\n          placeholder=\"société\"\r\n          value={company}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          id=\"phone\"\r\n          name=\"phone\"\r\n          onChange={(e) => setPhone(e.target.value)}\r\n          placeholder=\"téléphone\"\r\n          value={phone}\r\n        />\r\n        <div className=\"email-content\">\r\n          <label id=\"not-mail\">Email non valide</label>\r\n          <input\r\n            type=\"mail\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            required\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            placeholder=\"email *\"\r\n            value={email}\r\n          />\r\n        </div>\r\n        <textarea\r\n          id=\"message\"\r\n          name=\"message\"\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          placeholder=\"message *\"\r\n          value={message}\r\n          required\r\n        />\r\n      </div>\r\n      <input\r\n        className=\"formButton hover button\"\r\n        type=\"submit\"\r\n        value=\"Envoyer\"\r\n        onClick={(e) => handleSubmit(e)}\r\n      />\r\n      <div className=\"formMessage\"></div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n"]},"metadata":{},"sourceType":"module"}